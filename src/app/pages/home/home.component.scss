.div1
{
//   background: linear-gradient(115deg, #56d8e4 10%, #9f01ea 90%);
  // background-image: url(../../../assets/wooden-background-with-white-note-paper-vector-1168223.jpg);
  background-color: #182538;
  width: 100vw;
  height: 150vh;
  // muốn trang web DÀI XUỐNG THÌ TĂNG CÁI HEIGHT LÊN
  //gke z peo~ pr0 q3 <3 
}

// .div2
// {
// //   background: linear-gradient(115deg, #9f01ea 10%,  #56d8e4 90%);
//     background-color: #182538;
//   width: 50vw;
//   height: 200vh;
// }

.buttonToPress
{
  margin: 300px auto auto 300px;
}

.taitồ
{
  font-size: 100px;
}

.discript
{
  font-size: 30px;
}

.text
{
  margin: 0 100px;
  font-size: 50px;
  text-align: left;
  color:white;
  font-family: fantasy;
}

.buttonPanel
{
  font-size: 40px;
  margin: 20% 10% 2% 35%;
  padding: 1% 1% 1% 1%;
  display: block;
}

$color-gray: #666;
$color-black: #000;
$stripe-height: 7px;
$btn-color: $color-gray;
$btn-background: #fff;
$btn-color-hover: #fff;
$btn-background-hover: $color-gray;
$border-color: $color-gray;
$border-color-hover: $color-black;

@mixin reset-button {
    overflow : visible;
    margin : 0;
    padding : 0;
    border : 0;
    background : transparent;
    font : inherit;
    line-height : normal;
    cursor : pointer;
    -moz-user-select : text;
    
    &:-moz-focus-inner {
        padding : 0;
        border : 0;
    }
}

@keyframes stripe-slide {
    0% { background-position: 0% 0; }
    100% { background-position: 100% 0; }
}

.btn {
    @include reset-button;

    display: block;
    text-decoration: none;
    text-transform: uppercase;
    padding: 10px 10px;
    background-color: $btn-background;
    color: $btn-color;
    border: 2px solid $border-color;
    border-radius: 6px;
    margin-bottom: 16px;
    transition: all .5s ease;
    
    &--stripe {
        overflow: hidden;
        position: relative;
        
        &:after {
            content: '';
            display: block;
            height: $stripe-height;
            width: 100%;
            background-image: repeating-linear-gradient(
                45deg,
                $border-color,
                $border-color 1px,
                transparent 2px,
                transparent 5px
            );
            -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
            border-top: 1px solid $border-color;
            position: absolute;
            left: 0;
            bottom: 0;
            background-size: $stripe-height $stripe-height;
        }

        &:hover {
            background-color: $btn-background-hover;
            color: $btn-color-hover;
            border-color: $border-color-hover;

            &:after {
                background-image: repeating-linear-gradient(
                    45deg,
                    $btn-color-hover,
                    $btn-color-hover 1px,
                    transparent 2px,
                    transparent 5px
                );
                border-top: 1px solid $border-color-hover;
                animation: stripe-slide 12s infinite linear forwards;
            }
        }
    }
    
//     &--large {
//         width: 50%;
//     }
    
//     &--radius {
//         border-radius: 36px;
//     }
// }

@mixin glitchCopy { 
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

//glitch FlashNum
.glitch {
letter-spacing: .2em;
animation: glitch-skew 1s infinite linear alternate-reverse;
	// Creates a copy before our text. 
	&::before{
		@include glitchCopy;
		left: 2px;
		text-shadow: -2px 0 #ff00c1;
		clip: rect(44px, 450px, 56px, 0);
		animation: glitch-anim 5s infinite linear alternate-reverse;
	}
    	&::after {
		@include glitchCopy;
		left: -2px;
		text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
		animation: glitch-anim2 1s infinite linear alternate-reverse;
	}
}

@keyframes glitch-anim {
    $steps: 20;
    @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
        clip: rect(random(100)+px, 9999px, random(100)+px, 0);
              transform: skew((random(100) / 100) + deg);
      }
    }
  }

  @keyframes glitch-anim2 {
    $steps: 20;
    @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
        clip: rect(random(100)+px, 9999px, random(100)+px, 0);
              transform: skew((random(100) / 100) + deg);
      }
    }
  }
  
  @keyframes glitch-skew {
    $steps: 10;
    @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
        transform: skew((random(10) - 5) + deg);
      }
    }
  }
}
